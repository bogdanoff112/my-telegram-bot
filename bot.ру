import asyncio
import aiohttp
import ssl
from telegram import Update, ReplyKeyboardMarkup
from telegram.ext import ApplicationBuilder, CommandHandler, MessageHandler, filters, ContextTypes

# –ó–∞–º–µ–Ω–∏—Ç–µ –≤–∞—à —Ç–æ–∫–µ–Ω –±–æ—Ç–∞ –∏ ID –≥—Ä—É–ø–ø—ã –Ω–∏–∂–µ
BOT_TOKEN = '7870782995:AAFxxn14JrLg76wjZbAYqLN7RRXSxkiKGUo'  # –í–∞—à —Ç–æ–∫–µ–Ω –±–æ—Ç–∞
GROUP_CHAT_ID = '-1002464849631'  # ID –≤–∞—à–µ–π –≥—Ä—É–ø–ø—ã Telegram

# –°–æ–∑–¥–∞–µ–º SSL-–∫–æ–Ω—Ç–µ–∫—Å—Ç –¥–ª—è aiohttp, –æ—Ç–∫–ª—é—á–∞—è –ø—Ä–æ–≤–µ—Ä–∫—É —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤
ssl_context = ssl.create_default_context()
ssl_context.check_hostname = False
ssl_context.verify_mode = ssl.CERT_NONE

# –°–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –∫–ª–∏–µ–Ω—Ç–∞
client_data = {}

# –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è —Å—á—ë—Ç—á–∏–∫–∞ –∑–∞—è–≤–æ–∫
request_counter = 0

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è —Å –ø–∞—É–∑–æ–π
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.effective_user.id
    client_data[user_id] = {}  # –°–æ–∑–¥–∞–µ–º –∑–∞–ø–∏—Å—å –¥–ª—è –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    
    # –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    await update.message.reply_text("–ü—Ä–∏–≤–µ—Ç! üëã\n–†–∞–¥—ã –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–æ–≤–∞—Ç—å –í–∞—Å –≤ –Ω–∞—à–µ–º —á–∞—Ç–µ!")
    
    # –ü–∞—É–∑–∞ 2 —Å–µ–∫—É–Ω–¥—ã
    await asyncio.sleep(2)
    
    # –í–æ–ø—Ä–æ—Å –æ –∏–º–µ–Ω–∏
    await update.message.reply_text("–ö–∞–∫ –í–∞—Å –∑–æ–≤—É—Ç? (–¢–∞–∫ –º—ã —Å–º–æ–∂–µ–º –æ–±—Ä–∞—â–∞—Ç—å—Å—è –∫ –í–∞–º –ø–æ –∏–º–µ–Ω–∏ üôÇ)")
    client_data[user_id]['step'] = 'name'  # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —à–∞–≥ –∫–∞–∫ "name"

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –¥–∞–Ω–Ω—ã—Ö –≤ –≥—Ä—É–ø–ø–æ–≤–æ–π —á–∞—Ç
async def send_data_to_group(chat_id, data):
    global request_counter
    request_counter += 1  # –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Å—á—ë—Ç—á–∏–∫ –Ω–∞ 1 —Å –∫–∞–∂–¥–æ–π –Ω–æ–≤–æ–π –∑–∞—è–≤–∫–æ–π

    url = f'https://api.telegram.org/bot{BOT_TOKEN}/sendMessage'
    payload = {
        'chat_id': chat_id,  # ID –≥—Ä—É–ø–ø—ã
        'text': (f"–ó–∞—è–≤–∫–∞ ‚Ññ{request_counter}:\n–ò–º—è: {data['name']}\n"
                 f"–ó–∞–ø—Ä–æ—Å: {data['care_type']}\n–ì–æ—Ä–æ–¥: {data['city']}\n"
                 f"–î–æ–ø. –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è: {data['additional_info']}\n"
                 f"–°–ø–æ—Å–æ–± —Å–≤—è–∑–∏: {data.get('contact_method', '–¢–µ–ª–µ—Ñ–æ–Ω')}\n"
                 f"–ö–æ–Ω—Ç–∞–∫—Ç: {data.get('contact_info', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')}")
    }

    # –ò—Å–ø–æ–ª—å–∑—É–µ–º SSL-–∫–æ–Ω—Ç–µ–∫—Å—Ç –±–µ–∑ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤
    connector = aiohttp.TCPConnector(ssl=ssl_context)
    async with aiohttp.ClientSession(connector=connector) as session:
        async with session.post(url, json=payload) as response:
            result = await response.json()
            print(f"–û—Ç–≤–µ—Ç –æ—Ç Telegram API: {result}")  # –õ–æ–≥–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π
async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.effective_user.id

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∑–∞–ø–∏—Å–∏ –∫–ª–∏–µ–Ω—Ç–∞
    if user_id not in client_data:
        client_data[user_id] = {}
    
    step = client_data[user_id].get('step')  # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–µ–∫—É—â–∏–π —à–∞–≥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–ª—é—á–∞ 'contact_method', –µ—Å–ª–∏ –µ–≥–æ –µ—â–µ –Ω–µ—Ç
    if 'contact_method' not in client_data[user_id]:
        client_data[user_id]['contact_method'] = None

    # –°–±–æ—Ä –∏–º–µ–Ω–∏
    if step == 'name':
        client_data[user_id]['name'] = update.message.text  # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–º—è
        await update.message.reply_text(f"–ü—Ä–∏—è—Ç–Ω–æ –ø–æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è, {client_data[user_id]['name']}!")
        await asyncio.sleep(2)
        
        # –ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ –≤—ã–±–æ—Ä —Ç–∏–ø–∞ –ø–µ—Ä—Å–æ–Ω–∞–ª–∞
        keyboard = [['–°–∏–¥–µ–ª–∫—É', '–ù—è–Ω—é', '–î–æ–º–∞—à–Ω–∏–π –ø–µ—Ä—Å–æ–Ω–∞–ª']]
        reply_markup = ReplyKeyboardMarkup(keyboard, one_time_keyboard=True, resize_keyboard=True)
        await update.message.reply_text("–ö–æ–≥–æ –í—ã –∏—â–µ—Ç–µ?", reply_markup=reply_markup)
        client_data[user_id]['step'] = 'care_type'

    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ —Ç–∏–ø–∞ –ø–µ—Ä—Å–æ–Ω–∞–ª–∞
    elif step == 'care_type':
        client_data[user_id]['care_type'] = update.message.text  # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–∏–ø –ø–µ—Ä—Å–æ–Ω–∞–ª–∞
        await asyncio.sleep(2)

        await update.message.reply_text("–í –∫–∞–∫–æ–º –≥–æ—Ä–æ–¥–µ –í–∞–º –Ω—É–∂–Ω–∞ —ç—Ç–∞ —É—Å–ª—É–≥–∞?")
        client_data[user_id]['step'] = 'city'

    # –°–±–æ—Ä –≥–æ—Ä–æ–¥–∞
    elif step == 'city':
        client_data[user_id]['city'] = update.message.text  # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≥–æ—Ä–æ–¥
        await asyncio.sleep(2)

        await update.message.reply_text("–ï—Å—Ç—å –ª–∏ –≤–∞–∂–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è, –∫–æ—Ç–æ—Ä—É—é –Ω—É–∂–Ω–æ –∑–Ω–∞—Ç—å?")
        client_data[user_id]['step'] = 'additional_info'

    # –°–±–æ—Ä –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
    elif step == 'additional_info':
        client_data[user_id]['additional_info'] = update.message.text  # –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
        await asyncio.sleep(2)
        
        # –í–æ–ø—Ä–æ—Å –æ –Ω–æ–º–µ—Ä–µ —Ç–µ–ª–µ—Ñ–æ–Ω–∞
        keyboard = [['–ù–µ –º–æ–≥—É –≥–æ–≤–æ—Ä–∏—Ç—å']]
        reply_markup = ReplyKeyboardMarkup(keyboard, one_time_keyboard=True, resize_keyboard=True)
        await update.message.reply_text("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞–ø–∏—à–∏—Ç–µ –≤–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –¥–ª—è —Å–≤—è–∑–∏ üìû", reply_markup=reply_markup)
        client_data[user_id]['step'] = 'phone'

    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞
    elif step == 'phone':
        if update.message.text == '–ù–µ –º–æ–≥—É –≥–æ–≤–æ—Ä–∏—Ç—å':
            # –ï—Å–ª–∏ –≤—ã–±—Ä–∞–Ω–∞ –∫–Ω–æ–ø–∫–∞ "–ù–µ –º–æ–≥—É –≥–æ–≤–æ—Ä–∏—Ç—å", –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º –º–µ—Å—Å–µ–Ω–¥–∂–µ—Ä—ã
            await update.message.reply_text("–ö–∞–∫ —Å –í–∞–º–∏ —Å–≤—è–∑–∞—Ç—å—Å—è?")
            keyboard = [['WhatsApp', 'Telegram']]
            reply_markup = ReplyKeyboardMarkup(keyboard, one_time_keyboard=True, resize_keyboard=True)
            await update.message.reply_text("–í—ã–±–µ—Ä–∏—Ç–µ –º–µ—Å—Å–µ–Ω–¥–∂–µ—Ä –¥–ª—è —Å–≤—è–∑–∏:", reply_markup=reply_markup)
            client_data[user_id]['step'] = 'contact_method'
        else:
            client_data[user_id]['contact_method'] = '–¢–µ–ª–µ—Ñ–æ–Ω'  # –£–∫–∞–∑—ã–≤–∞–µ–º —Å–ø–æ—Å–æ–± —Å–≤—è–∑–∏ –∫–∞–∫ —Ç–µ–ª–µ—Ñ–æ–Ω
            client_data[user_id]['contact_info'] = update.message.text  # –°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞
            await asyncio.sleep(2)
            await update.message.reply_text("–°–ø–∞—Å–∏–±–æ! –ú–µ–Ω–µ–¥–∂–µ—Ä —Å–≤—è–∂–µ—Ç—Å—è —Å –í–∞–º–∏ –ø–æ —Ç–µ–ª–µ—Ñ–æ–Ω—É.")
            await asyncio.sleep(2)

            # –û—Ç–ø—Ä–∞–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö –≤ –≥—Ä—É–ø–ø–æ–≤–æ–π —á–∞—Ç
            await send_data_to_group(GROUP_CHAT_ID, client_data[user_id])
            client_data[user_id]['step'] = None  # –ó–∞–≤–µ—Ä—à–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å

    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ –º–µ—Å—Å–µ–Ω–¥–∂–µ—Ä–∞
    elif step == 'contact_method':
        client_data[user_id]['contact_method'] = update.message.text  # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–ø–æ—Å–æ–± —Å–≤—è–∑–∏
        await asyncio.sleep(2)

        if client_data[user_id]['contact_method'] == 'WhatsApp':
            await update.message.reply_text("–ù–∞–ø–∏—à–∏—Ç–µ –í–∞—à –º–æ–±–∏–ª—å–Ω—ã–π –Ω–æ–º–µ—Ä, –º–µ–Ω–µ–¥–∂–µ—Ä –Ω–∞–ø–∏—à–µ—Ç –í–∞–º.")
            client_data[user_id]['step'] = 'whatsapp_number'
        elif client_data[user_id]['contact_method'] == 'Telegram':
            await update.message.reply_text("–ù–∞–ø–∏—à–∏—Ç–µ –í–∞—à —Ç–µ–≥, –º–µ–Ω–µ–¥–∂–µ—Ä –Ω–∞–ø–∏—à–µ—Ç –í–∞–º –≤ Telegram.")
            client_data[user_id]['step'] = 'telegram_tag'

    # –°–±–æ—Ä –Ω–æ–º–µ—Ä–∞ WhatsApp
    elif step == 'whatsapp_number':
        client_data[user_id]['contact_info'] = update.message.text  # –°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–æ–º–µ—Ä WhatsApp
        await update.message.reply_text("–°–ø–∞—Å–∏–±–æ! –ú–µ–Ω–µ–¥–∂–µ—Ä —Å–≤—è–∂–µ—Ç—Å—è —Å –í–∞–º–∏ —á–µ—Ä–µ–∑ WhatsApp.")
        await asyncio.sleep(2)

        # –û—Ç–ø—Ä–∞–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö –≤ –≥—Ä—É–ø–ø–æ–≤–æ–π —á–∞—Ç
        await send_data_to_group(GROUP_CHAT_ID, client_data[user_id])
        client_data[user_id]['step'] = None  # –ó–∞–≤–µ—Ä—à–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å

    # –°–±–æ—Ä —Ç–µ–≥–∞ Telegram
    elif step == 'telegram_tag':
        client_data[user_id]['contact_info'] = update.message.text  # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–µ–≥ Telegram
        await update.message.reply_text("–°–ø–∞—Å–∏–±–æ! –ú–µ–Ω–µ–¥–∂–µ—Ä —Å–≤—è–∂–µ—Ç—Å—è —Å –í–∞–º–∏ —á–µ—Ä–µ–∑ Telegram.")
        await asyncio.sleep(2)

        # –û—Ç–ø—Ä–∞–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö –≤ –≥—Ä—É–ø–ø–æ–≤–æ–π —á–∞—Ç
        await send_data_to_group(GROUP_CHAT_ID, client_data[user_id])
        client_data[user_id]['step'] = None  # –ó–∞–≤–µ—Ä—à–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å

# –û—Å–Ω–æ–≤–Ω–æ–π –±–ª–æ–∫ –∫–æ–¥–∞
if __name__ == '__main__':
    application = ApplicationBuilder().token(BOT_TOKEN).build()

    # –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–º–∞–Ω–¥—É /start
    start_handler = CommandHandler('start', start)
    application.add_handler(start_handler)

    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
    message_handler = MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message)
    application.add_handler(message_handler)

    # –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
    application.run_polling(drop_pending_updates=True)

